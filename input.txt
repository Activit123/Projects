int[,] LCS(int[] a, int n, int[] b, int m)
int[][] lung  new int[n][m]
*) rezolvăm subproblemele simple
lung[0,0]  (a[0] == b[0]) ? 1 : 0
int i
int j
pentru i  1, n – 1 execută
 dacă a[i] == b[0] atunci
 lung[i][0]  1
 altfel
 lung[i][0]  lung[i-1][0]
 ■
 ■
pentru j  1, m – 1 execută
 dacă a[0] == b[j] atunci
  lung[0][j]  1
 altfel
 lung[0][j]  lung[0][j-1]
 ■
 ■
 *) completăm matricea lung
pentru i  1, n – 1 execută
pentru j  1, m – 1 execută
 lung[i][ j]  max((a[i]==b[j])?lung[i-1][j-1]+1:0,lung[i-1][ j], lung[i][ j-1])
 ■
 ■
 întoarce lung
sf.procedură